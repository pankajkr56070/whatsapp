[{"/mnt/d/CloneAPP/whatsapp-clone/src/index.js":"1","/mnt/d/CloneAPP/whatsapp-clone/src/reportWebVitals.js":"2","/mnt/d/CloneAPP/whatsapp-clone/src/App.js":"3","/mnt/d/CloneAPP/whatsapp-clone/src/Sidebar.js":"4","/mnt/d/CloneAPP/whatsapp-clone/src/SidebarChat.js":"5","/mnt/d/CloneAPP/whatsapp-clone/src/Chat.js":"6","/mnt/d/CloneAPP/whatsapp-clone/src/firebase.js":"7","/mnt/d/CloneAPP/whatsapp-clone/src/Login.js":"8","/mnt/d/CloneAPP/whatsapp-clone/src/serviceWorker.js":"9","/mnt/d/CloneAPP/whatsapp-clone/src/StateProvider.js":"10","/mnt/d/CloneAPP/whatsapp-clone/src/reducer.js":"11"},{"size":767,"mtime":1611428885344,"results":"12","hashOfConfig":"13"},{"size":362,"mtime":1611255476468,"results":"14","hashOfConfig":"13"},{"size":811,"mtime":1611429200947,"results":"15","hashOfConfig":"13"},{"size":1736,"mtime":1611426188098,"results":"16","hashOfConfig":"13"},{"size":1476,"mtime":1611435098335,"results":"17","hashOfConfig":"13"},{"size":3428,"mtime":1611432986956,"results":"18","hashOfConfig":"13"},{"size":659,"mtime":1611421381769,"results":"19","hashOfConfig":"13"},{"size":1063,"mtime":1611430671700,"results":"20","hashOfConfig":"13"},{"size":4751,"mtime":1611428889919,"results":"21","hashOfConfig":"13"},{"size":375,"mtime":1611428896789,"results":"22","hashOfConfig":"13"},{"size":379,"mtime":1611428893635,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"s4mn4p",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"26"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"37"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"26"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"26"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"/mnt/d/CloneAPP/whatsapp-clone/src/index.js",[],["52","53"],"/mnt/d/CloneAPP/whatsapp-clone/src/reportWebVitals.js",[],"/mnt/d/CloneAPP/whatsapp-clone/src/App.js",["54","55","56"],"import \"./App.css\";\nimport React, { useEffect, useState } from \"react\";\nimport Sidebar from \"./Sidebar\";\nimport Chat from \"./Chat\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Login from \"./Login\";\nimport { useStateValue } from \"./StateProvider\";\n\nfunction App() {\n  const [{ user }, dispatch] = useStateValue();\n  return (\n    <div className=\"app\">\n      {!user ? (\n        <Login />\n      ) : (\n        <div className=\"app_body\">\n          <Router>\n            <Sidebar />\n            <Switch>\n              <Route path=\"/rooms/:roomId\">\n                <Chat />\n              </Route>\n\n              <Route path=\"/\">\n                <Chat />\n              </Route>\n            </Switch>\n          </Router>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","/mnt/d/CloneAPP/whatsapp-clone/src/Sidebar.js",[],"/mnt/d/CloneAPP/whatsapp-clone/src/SidebarChat.js",["57"],"import { Avatar } from \"@material-ui/core\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport db from \"./firebase\";\r\nimport \"./SidebarChat.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useStateValue } from \"./StateProvider\";\r\n\r\nfunction SidebarChat({ id, name, addNewChat }) {\r\n  const [seed, setSeed] = useState(\"\");\r\n  const [messages, setMessages] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    if (id) {\r\n      db.collection(\"rooms\")\r\n        .doc(id)\r\n        .collection(\"messages\")\r\n        .orderBy(\"timestamp\", \"desc\")\r\n        .onSnapshot((snapshot) =>\r\n          setMessages(snapshot.docs.map((doc) => doc.data()))\r\n        );\r\n    }\r\n  }, [id]);\r\n\r\n  useEffect(() => {\r\n    setSeed(Math.floor(Math.random() * 5000));\r\n  }, []);\r\n\r\n  const createChat = () => {\r\n    const roomName = prompt(\"Please enter name for chat\");\r\n\r\n    if (roomName) {\r\n      //do some shitty database stuff\r\n      db.collection(\"rooms\").add({\r\n        name: roomName,\r\n      });\r\n    }\r\n  };\r\n  return !addNewChat ? (\r\n    <Link to={`/rooms/${id}`}>\r\n      <div className=\"sidebarChat\">\r\n        <Avatar src={`https://avatars.dicebear.com/api/human/${seed}.svg`} />\r\n        <div className=\"sidebarchat_info\">\r\n          <h2>{name}</h2>\r\n          <p>{messages[0]?.message}</p>\r\n        </div>\r\n      </div>\r\n    </Link>\r\n  ) : (\r\n    <div onClick={createChat} className=\"sidebarChat\">\r\n      <h2> Add New Chat</h2>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SidebarChat;\r\n",["58","59"],"/mnt/d/CloneAPP/whatsapp-clone/src/Chat.js",["60","61"],"import React, { useEffect, useState } from \"react\";\r\nimport \"./Chat.css\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { Avatar } from \"@material-ui/core\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport SearchOutlined from \"@material-ui/icons/SearchOutlined\";\r\nimport AttachFile from \"@material-ui/icons/AttachFile\";\r\nimport MoreVert from \"@material-ui/icons/MoreVert\";\r\nimport InsertEmoticonIcon from \"@material-ui/icons/InsertEmoticon\";\r\nimport MicIcon from \"@material-ui/icons/Mic\";\r\nimport db from \"./firebase\";\r\nimport firebase from \"firebase\";\r\nimport { useStateValue } from \"./StateProvider\";\r\n\r\nfunction Chat() {\r\n  const [{ user }, dispatch] = useStateValue();\r\n  const [input, setInput] = useState(\"\");\r\n  const { roomId } = useParams();\r\n  const [roomName, setRoomName] = useState(\"\");\r\n  const [messages, setMessages] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (roomId) {\r\n      db.collection(\"rooms\")\r\n        .doc(roomId)\r\n        .onSnapshot((snapshot) => setRoomName(snapshot.data().name));\r\n\r\n      db.collection(\"rooms\")\r\n        .doc(roomId)\r\n        .collection(\"messages\")\r\n        .orderBy(\"timestamp\", \"asc\")\r\n        .onSnapshot((snapshot) =>\r\n          setMessages(snapshot.docs.map((doc) => doc.data()))\r\n        );\r\n    }\r\n  }, [roomId]);\r\n\r\n  const sendMessage = (e) => {\r\n    e.preventDefault();\r\n    console.log(\"You typed >>>\", input);\r\n\r\n    db.collection(\"rooms\").doc(roomId).collection(\"messages\").add({\r\n      message: input,\r\n      name: user.displayName,\r\n      timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n    });\r\n\r\n    setInput(\"\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"chat\">\r\n      <div className=\"chat_header\">\r\n        <Avatar\r\n          src={`https:avatars.dicebear.com/api/human/${Math.floor(\r\n            Math.random() * 5000\r\n          )}.svg`}\r\n        />\r\n\r\n        <div className=\"chat_headerInfo\">\r\n          <h3>{roomName}</h3>\r\n          <p>\r\n            Last seen{\" \"}\r\n            {new Date(\r\n              messages[messages.length - 1]?.timestamp?.toDate()\r\n            ).toUTCString()}\r\n          </p>\r\n        </div>\r\n\r\n        <div className=\"chat_headerRight\">\r\n          <IconButton>\r\n            <SearchOutlined />\r\n          </IconButton>\r\n          <IconButton>\r\n            <AttachFile />\r\n          </IconButton>\r\n          <IconButton>\r\n            <MoreVert />\r\n          </IconButton>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"chat_body\">\r\n        {messages.map((message) => (\r\n          <p\r\n            className={`chat_message ${\r\n              message.name == user.displayName && \"chat_reciever\"\r\n            }`}\r\n          >\r\n            <span className=\"chat_name\">{message.name}</span>\r\n            {message.message}\r\n            <span className=\"chat_timestamp\">\r\n              {new Date(message.timestamp?.toDate()).toUTCString()}\r\n            </span>\r\n          </p>\r\n        ))}\r\n      </div>\r\n\r\n      <div className=\"chat_footer\">\r\n        <InsertEmoticonIcon />\r\n        <form>\r\n          <input\r\n            value={input}\r\n            onChange={(e) => setInput(e.target.value)}\r\n            placeholder=\"Type a message\"\r\n            type=\"text\"\r\n          />\r\n          <button onClick={sendMessage} type=\"submit\">\r\n            {\" \"}\r\n            Send a message\r\n          </button>\r\n        </form>\r\n        <MicIcon />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Chat;\r\n","/mnt/d/CloneAPP/whatsapp-clone/src/firebase.js",[],"/mnt/d/CloneAPP/whatsapp-clone/src/Login.js",["62"],"import { Button } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { auth, provider } from \"./firebase\";\r\nimport \"./Login.css\";\r\nimport { actionTypes } from \"./reducer\";\r\nimport { useStateValue } from \"./StateProvider\";\r\n\r\nfunction Login() {\r\n  const [{}, dispatch] = useStateValue();\r\n\r\n  const signIn = () => {\r\n    auth\r\n      .signInWithPopup(provider)\r\n      .then((result) => {\r\n        dispatch({\r\n          type: actionTypes.SET_USER,\r\n          user: result.user,\r\n        });\r\n      })\r\n      .catch((error) => alert(error.message));\r\n  };\r\n  return (\r\n    <div className=\"login\">\r\n      <div className=\"login_container\">\r\n        <img\r\n          src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/6/6b/WhatsApp.svg/1200px-WhatsApp.svg.png\"\r\n          alt=\"\"\r\n        />\r\n\r\n        <div className=\"login_text\">\r\n          <h1>Sign in to WhatApp!!</h1>\r\n        </div>\r\n\r\n        <Button type=\"submit\" onClick={signIn}>\r\n          Sign in with Google :)\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","/mnt/d/CloneAPP/whatsapp-clone/src/serviceWorker.js",[],"/mnt/d/CloneAPP/whatsapp-clone/src/StateProvider.js",[],"/mnt/d/CloneAPP/whatsapp-clone/src/reducer.js",[],{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","severity":1,"message":"68","line":2,"column":17,"nodeType":"69","messageId":"70","endLine":2,"endColumn":26},{"ruleId":"67","severity":1,"message":"71","line":2,"column":28,"nodeType":"69","messageId":"70","endLine":2,"endColumn":36},{"ruleId":"67","severity":1,"message":"72","line":10,"column":20,"nodeType":"69","messageId":"70","endLine":10,"endColumn":28},{"ruleId":"67","severity":1,"message":"73","line":6,"column":10,"nodeType":"69","messageId":"70","endLine":6,"endColumn":23},{"ruleId":"63","replacedBy":"74"},{"ruleId":"65","replacedBy":"75"},{"ruleId":"67","severity":1,"message":"72","line":16,"column":20,"nodeType":"69","messageId":"70","endLine":16,"endColumn":28},{"ruleId":"76","severity":1,"message":"77","line":87,"column":28,"nodeType":"78","messageId":"79","endLine":87,"endColumn":30},{"ruleId":"80","severity":1,"message":"81","line":9,"column":10,"nodeType":"82","messageId":"79","endLine":9,"endColumn":12},"no-native-reassign",["83"],"no-negated-in-lhs",["84"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'dispatch' is assigned a value but never used.","'useStateValue' is defined but never used.",["83"],["84"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","no-global-assign","no-unsafe-negation"]